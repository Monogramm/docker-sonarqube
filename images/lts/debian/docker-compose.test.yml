version: "2.2"

networks:
  sonarnet:

volumes:
  sonarqube_conf:
  sonarqube_extensions:
  sonarqube_data:
  sonarqube_logs:

services:
  # https://docs.docker.com/docker-hub/builds/automated-testing/
  sut:
    build:
      context: ./test
      dockerfile: Dockerfile
    depends_on:
      - sonarqube_db
      - sonarqube
    volumes_from:
      - sonarqube
    networks:
      - sonarnet
    volumes:
      - sonarqube_logs:/opt/sonarqube/logs:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  sonarqube:
    # For development or CI, tag build from local Dockerfile
    build:
      context: ./
      dockerfile: Dockerfile
      args: 
        - TAG=${TAG}
        - VCS_REF=${VCS_REF}
        - BUILD_DATE=${BUILD_DATE}
    # For production, download prebuilt image
    image: ${IMAGE_NAME}
    container_name: sonarqube
    #restart: always
    healthcheck:
      test: CMD wget -qO- http://127.0.0.1:9000/api/system/status | grep -q -e '"status":"UP"' -e '"status":"DB_MIGRATION_NEEDED"' -e '"status":"DB_MIGRATION_RUNNING"' || exit 1
      interval: 60s
      timeout: 10s
      #start_period: 5s
      retries: 4
    ports:
      - "49000:9000"
      - "40443:443"
    networks:
      - sonarnet
    depends_on:
      sonarqube_db:
        condition: service_healthy
    volumes:
      # for Version 7.9.x only
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://sonarqube_db:5432/${SONARQUBE_DB_NAME}
      - sonar.jdbc.url=jdbc:postgresql://sonarqube_db:5432/${SONARQUBE_DB_NAME}
      - SONARQUBE_JDBC_USERNAME=${SONARQUBE_DB_USER}
      - sonar.jdbc.username=${SONARQUBE_DB_USER}
      - SONARQUBE_JDBC_PASSWORD=${SONARQUBE_DB_PWD}
      - sonar.jdbc.password=${SONARQUBE_DB_PWD}

  sonarqube_db:
    image: postgres:latest
    container_name: sonarqube_db
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${SONARQUBE_DB_USER}"]
    expose:
      - '5432'
    #ports:
    #  - "5432:5432"
    networks:
      - sonarnet
    volumes:
      - /srv/sonarqube/db:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      - POSTGRES_DB=${SONARQUBE_DB_NAME}
      - POSTGRES_USER=${SONARQUBE_DB_USER}
      - POSTGRES_PASSWORD=${SONARQUBE_DB_PWD}
